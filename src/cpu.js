'use strict';

const SCREEN_HEIGHT = 64;
const SCREEN_WIDTH = 32;
const STACK_SIZE = 16;
const MEMORY_SIZE = 4096; // 4kB
const VRAM_SIZE = SCREEN_HEIGHT * SCREEN_WIDTH;
const V_REGISTERS = 16;

const FONT_SET = [
	0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
	0x20, 0x60, 0x20, 0x20, 0x70, // 1
	0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
	0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
	0x90, 0x90, 0xF0, 0x10, 0x10, // 4
	0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
	0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
	0xF0, 0x10, 0x20, 0x40, 0x40, // 7
	0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
	0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
	0xF0, 0x90, 0xF0, 0x90, 0x90, // A
	0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
	0xF0, 0x80, 0x80, 0x80, 0xF0, // C
	0xE0, 0x90, 0x90, 0x90, 0xE0, // D
	0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
	0xF0, 0x80, 0xF0, 0x80, 0x80, // F
];

class Chip8 {
	constructor() {
		this.I = 0;
		this.pc = 0x200;
		this.sp = 0;
		this.stack = new Array(STACK_SIZE);
		this.V = new Array(V_REGISTERS);
		this.memory = new Array(MEMORY_SIZE);
		this.vram = new Array(VRAM_SIZE);
		this.keypad = new Array(16);
		this.delayTimer = 0;
		this.soundTimer = 0;
		this.opcode = 0;
		this.drawFlag = false;
		this.stopper = false;

		for(var i = 0; i < FONT_SET.length; i++) {
			this.memory[i] = FONT_SET[i]
		}
	}
}

console.log("cpu loaded");
